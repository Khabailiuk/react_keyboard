{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","handleKeyPressed","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAeEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAhBtC,uDAKE,WACEC,SAASC,iBAAiB,QACxBC,KAAKN,oBAPX,kCAUE,WACEI,SAASG,oBAAoB,QAC3BD,KAAKN,oBAZX,oBAmBE,WACE,IAAMG,EAAMG,KAAKR,MAAMC,WAEvB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGL,EAAG,mCAC4BA,EAD5B,KAEA,mCA3Bd,GAAyBM,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.8010c5c8.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyPressed: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    keyPressed: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup',\n      this.handleKeyPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup',\n      this.handleKeyPressed);\n  }\n\n  handleKeyPressed = (event: KeyboardEvent) => {\n    this.setState({ keyPressed: event.key });\n  };\n\n  render() {\n    const key = this.state.keyPressed;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key\n            ? `The last pressed key is [${key}]`\n            : 'Nothting was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}